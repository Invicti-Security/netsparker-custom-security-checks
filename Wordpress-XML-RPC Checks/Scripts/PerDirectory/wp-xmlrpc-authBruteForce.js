/* 
*  This Per-Directory Security Check script was generated by Invicti Standard 23.6.0.40861, at 10-Jun-23 2:03:06 PM 
*  For more information about Custom Script Checks and samples, please refer to documentation: 
*  https://www.invicti.com/support/custom-security-checks-scripting/ 
*/ 

var attacks = [
    {
        id: '90cdd912-6db1-4d1b-8b91-99e07949353a',
        name: 'Wordpress XML-RPC Authentication Brute Force',
        attack: 'xmlrpc.php',
    }
];


function createRawRequestBody(url, body) {
    var re = /(https?:\/\/)([^:^\/]*)(:\d*)(.*)?/;
    const capture = url.match(re);
    host =  capture[2].toString() + capture[3].toString();
    origin = capture[1].toString() + host;
    uri = capture[4].toString();
    var length = body.length;
    // prepare raw request    
    var raw =  `POST ${uri} HTTP/1.1
Content-Type: text/xml
Host: ${host}
Content-Length: ${length.toString()}

${body}`;
    return raw;
}

function getUsersBlogs(url, body) {
    var loginRequest = createRawRequestBody(url, body);
    var sendDate = (new Date()).getTime();
    var loginResponse = invicti.requestRaw(url, loginRequest, false);
    var receiveDate = (new Date()).getTime();
    var responseTimeMs = receiveDate - sendDate;
    return responseTimeMs;
}


function analyze(context, response) {
    var url = response.Uri.toString();
    if (response.Body.indexOf('XML-RPC server accepts POST requests only.') > -1 && response.StatusCode == 405) {
        var body = `<methodCall><methodName>demo.sayHello</methodName><params></params></methodCall>`
        var postRequest = createRawRequestBody(url, body);
        var postResponse = invicti.requestRaw(url, postRequest, false);

        if (postResponse.Body.indexOf('<string>Hello!</string>') > -1) {
            var totalResponseTime = 0;
            for (let i = 0 ; i < 20; i++) {
                var requestBody = "<methodCall><methodName>wp.getUsersBlogs</methodName><params><param><value><string>ThisUserDoesNotExist</string></value></param><param><value><string>thisis1Passw"+i+"</string></value></param></params></methodCall>";
                totalResponseTime = totalResponseTime + getUsersBlogs(url, requestBody);
            }
            if (totalResponseTime < 60000) {
                return new Vulnerability('f9e36c93-73c0-412b-ba2e-c3153ef6360b');    
            }
        }
    }
}